package com.panyu.springdemo.soundsystem.jase;

/*
* 抽象类概述
*  描述一个事务，却没有足够信息，这时就将这个事务称为抽象事务
*
*  面对抽象的事务，虽然不具体，但是可以简化。
*  不用面对具体的事务
*
*  特点：
*   1、抽象方法一定定义在抽象类中，都需要用abstract来修饰
*   2、抽象类不能实例化。不能用new关键字创建对象
*   3、只有子类覆盖了所有的抽象方法后，子类具体化，子类就可以创建对象。
*       如果没有覆盖所有的抽象方法，那么子类还是一个抽象类
*
*
*  抽象类也是不断的向上抽取而来的。抽取了方法的声明而不确定具体的方法内容。
*  由不同的子类来完成具体的方法内容。
*
*
*
*  问题：
*  1、抽象类中有构造函数吗？
*       有，抽象类的构造函数虽然不能给抽象类对象实例化，因为抽象类不能创建对象，但是抽象类有子类，它的构造函数可以子类的对象实例化。
*
*       抽象类和一般类的异同点？
*           相同：都是用来描述事物的，都可以进行属性和行为的描述。
*           不同：抽象类描述事务的信息不具体，一般类描述事物具体信息。
*           代码的不同：
*               抽象类中可以定义抽象方法。一般类不行
*               抽象类不可以实例化，一般类可以。
*
*
*  2、抽象类一定是一个父类吗？
*       是的。
*
*
*  3、抽象类中可以不定义抽象方法吗？？
*       可以的。仅仅是让该类不能创建对象
*  4、抽象关键字abstract和哪些关键字不能共存？
*       final:
*       private:
*       static:
*
* */


public class AbstractDemo {
}
