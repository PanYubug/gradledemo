driver.quit()
作用:
    关闭与该WebDriver会话关联的所有窗口和选项卡
    关闭浏览器进程
    关闭后台驱动程序
    通知Selenium Grid不再使用浏览器，以便其他会话可以使用它（如果您正在使用Selenium Grid）
可以用作teardown()

WebDriver提供了三种切换到框架的方式：
1、使用WebElement
    //Using the ID
    driver.switchTo().frame("buttonframe");
    //Or using the name instead
    driver.switchTo().frame("myframe");
    //Now we can click the button
    driver.findElement(By.tagName("button")).click();

2、使用名称或ID
    // Switches to the second frame
    driver.switchTo().frame(1);

3、离开框架
    // Return to the top level
    driver.switchTo().defaultContent();


、window管理
1、获取浏览器窗口的大小（以像素为单位）
//Access each dimension individually
int width = driver.manage().window().getSize().getWidth();
int height = driver.manage().window().getSize().getHeight();
//Or store the dimensions and query them later
Dimension size = driver.manage().window().getSize();
int width1 = size.getWidth();
int height1 = size.getHeight();
2、恢复窗口并设置窗口大小
driver.manage().window().setSize(new Dimension(1024, 768));
3、获取浏览器窗口左上角的坐标
// Access each dimension individually
int x = driver.manage().window().getPosition().getX();
int y = driver.manage().window().getPosition().getY();
// Or store the dimensions and query them later
Point position = driver.manage().window().getPosition();
int x1 = position.getX();
int y1 = position.getY();
4、将窗口移到所选位置
// Move the window to the top left of the primary monitor
driver.manage().window().setPosition(new Point(0, 0));
5、放大窗口。对于大多数操作系统，窗口将填满整个屏幕，而不会阻塞操作系统自己的菜单和工具栏
driver.manage().window().maximize();
6、最小化当前浏览上下文的窗口。此命令的确切行为特定于各个窗口管理器。最小化窗口通常会将窗口隐藏在系统托盘中。注意：此功能适用于Selenium 4和更高版本。
driver.manage().window().minimize();
7、填充整个屏幕，类似于在大多数浏览器中按F11。
driver.manage().window().fullscreen();
8、用于捕获当前浏览上下文的屏幕截图。WebDriver端点屏幕截图 返回以Base64格式编码的屏幕截图。
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.chrome.ChromeDriver;
import java.io.*;
import org.openqa.selenium.*;

public class SeleniumTakeScreenshot {
    public static void main(String args[]) throws IOException {
        WebDriver driver = new ChromeDriver();
        driver.get("http://www.example.com");
        // 截屏。用于捕获当前浏览上下文的屏幕截图
        File scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
        FileUtils.copyFile(scrFile, new File("./image.png"));
        driver.quit();
        // or TakeElement屏幕截图。用于捕获当前浏览上下文的元素的屏幕快照
        WebElement element = driver.findElement(By.cssSelector("h1"));
        File scrFile = element.getScreenshotAs(OutputType.FILE);
        FileUtils.copyFile(scrFile, new File("./image.png"));
        driver.quit();
        // 执行脚本。在所选框架或窗口的当前上下文中执行JavaScript代码段。
    }
}



